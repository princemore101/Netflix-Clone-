{"version":3,"sources":["axios.js","request.js","Row.js","Banner.js","logo/netflix_logo.png","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setmovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handelClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setmovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","show","setshow","window","addEventListener","scrollY","removeEventListener","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fc7897.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// base url to make request to the movie database \r\nconst instance = axios.create({\r\n    \r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n\r\n});\r\nexport default instance ;","// const API_KEY = \"555c9ff4fc5288d5396dc63d8cadf61d\" ; \r\nconst requests = {\r\n    fetchTrending :'/movie/upcoming?api_key=555c9ff4fc5288d5396dc63d8cadf61d&language=en-US&page=1',\r\n    fetchNetflixOriginals: '/discover/tv?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_gen=231',\r\n    fetchTopRated:'/movie/top_rated?api_key=555c9ff4fc5288d5396dc63d8cadf61d&language=en-US ',\r\n    fetchActionMovies : '/discover/movie?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_genres=28',\r\n    fetchComedyMovies : '/discover/movie?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_genres=35',\r\n    fetchHorrorMovies : '/discover/movie?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_genres=27',\r\n    fetchRomanceMovies : '/discover/movie?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_genres=10749',\r\n    fetchDocumentaries : '/discover/movie?api_key=555c9ff4fc5288d5396dc63d8cadf61d&with_genres=99',\r\n    \r\n}\r\nexport default requests ;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './request';\r\nimport \"./Row.css\";\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer'\r\n\r\n\r\n\r\n\r\nconst baseURL = ' https://image.tmdb.org/t/p/original';\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setmovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n\r\n            setmovies(request.data.results);\r\n            return requests;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl])\r\n        const opts = {\r\n\r\n        height : \"390\",\r\n        width: \"100%\",\r\n        playerVars : {\r\n            autoplay : 1,\r\n        }\r\n\r\n        };\r\n\r\n        const handelClick =(movie) => {\r\n\r\n          if(trailerUrl){\r\n              setTrailerUrl(\"\");\r\n          }else{\r\n              movieTrailer(movie?.name || \"\" )\r\n              .then((url) => {\r\n                const urlParams= new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n              })\r\n              .catch((error)=>console.log(error));\r\n\r\n          }\r\n\r\n\r\n\r\n        };\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className='row_posters'>\r\n                {/* {container-> posters} */}\r\n                {movies.map(movie => (\r\n\r\n                    <img\r\n                        key={movie.id}  onClick = { () => handelClick(movie)}\r\n                        className={`row_poster ${isLargeRow && \"row_poster_large\"}`}\r\n                        src={`${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        alt={movie.name}\r\n                    />\r\n                ))}\r\n            </div>\r\n         { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './request';\r\nimport './Banner.css';\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setmovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setmovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n\r\n\r\n            );\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <header className='banner'\r\n            style={{\r\n                backgroundSize: 'cover', backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n\r\n                backgroundPosition: \"center center\",\r\n\r\n            }}>\r\n            <div className='banner_contents'>\r\n\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_discription\">{truncate(movie?.overview, 120)}</h1>\r\n\r\n\r\n            </div>\r\n            <div className=\"banner_fadebottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","export default __webpack_public_path__ + \"static/media/netflix_logo.ffdf55de.png\";","import React,{useEffect,useState} from 'react'\r\nimport logo from './logo/netflix_logo.png'\r\nimport \"./Navbar.css\";\r\nfunction Navbar() {\r\n\r\n    const [show, setshow] = useState(false)\r\n  useEffect(() => {\r\n      \r\n     window.addEventListener(\"scroll\",()=>{\r\n         if(window.scrollY>150){\r\n           setshow(true)\r\n         }else setshow(false);\r\n         \r\n     });\r\n\r\n     return()=>{\r\n         window.removeEventListener(\"scroll\");\r\n     }\r\n\r\n  }, [])\r\n \r\n    return (\r\n        <div className={ `nav ${show && \"nav_black\"}`  } >\r\n           <img className=\"nav_logo\" src = {logo} alt =\" Netflix Logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { } from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Navbar from './Navbar'\nimport \"./Navbar.css\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Banner />\n\n      <Row title='NETFLIX ORIGINALS' fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Horror movies' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Action movies' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Romentic movies' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Comedy moviwes' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React ,{}from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./App.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}